plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'xyz.kajih'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url='https://repo.spring.io/snapshot' }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	// Spring Boot DevTools for development-time enhancements (e.g., hot reload)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Spring Boot configuration processor for enhanced auto-completion in IDEs
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// Spring Boot Swagger Generation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.29'

	// Spring Boot dependencies
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'			// JDBC support
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'		// JPA support
	implementation 'org.springframework.boot:spring-boot-starter-web'			// Web support (REST, controllers)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.modulith:spring-modulith-starter-core'	// Modulith framework for modular applications

	// HTMX integration for Spring Boot with Thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'		// Thymeleaf templating engine
	implementation 'io.github.wimdeblauwe:htmx-spring-boot-thymeleaf:4.0.1'

	// H2 database for in-memory database usage
	runtimeOnly 'com.h2database:h2'

//	implementation 'com.ibm.mq:mq-jms-spring-boot-starter:3.4.3'
	implementation 'org.springframework.boot:spring-boot-starter-artemis'
	implementation 'org.apache.activemq:artemis-jms-server:2.40.0'

	// Lombok for code generation (e.g., getters, setters)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Jackson for XML processing
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.18.3'

	// MapStruct for compiling-time mapping between objects (DTOs, entities, etc.)
	implementation("org.mapstruct:mapstruct:1.6.3")
	annotationProcessor("org.mapstruct:mapstruct-processor:1.6.3")

	// Testing dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'  // Spring Boot testing support
	testImplementation 'org.springframework.modulith:spring-modulith-starter-test'  // Modulith testing support
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'  // REST Docs for documenting REST APIs
	testImplementation("io.projectreactor:reactor-test")
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'  // JUnit 5 test engine for running tests

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.modulith:spring-modulith-bom:1.3.3"
	}
}

test {
	useJUnitPlatform()
}

/*
tasks.withType(JavaCompile) {
	options.compilerArgs = [
			'-Amapstruct.suppressGeneratorTimestamp=true',
			'-parameters'
	]
}

 */

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
